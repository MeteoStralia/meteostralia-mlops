networks:
  my_network:
    external: true
services:
  ingest_data:
      build:
        context: ./src/data_service/ingest_data
        dockerfile: ./ingest_data_dockerfile
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: ingest_data:latest
      container_name: ingest_data
  complete_nas:
      build:
        context: ./src/data_service/complete_nas
        dockerfile: ./complete_nas_dockerfile
      depends_on:
        ingest_data:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: complete_nas:latest
      container_name: complete_nas
  features:
      build:
        context: ./src/data_service/features
        dockerfile: ./features_dockerfile
      depends_on:
        complete_nas:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: features:latest
      container_name: features
  encode_data:
      build:
        context: ./src/data_service/encode_data
        dockerfile: ./encode_data_dockerfile
      depends_on:
        features:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: encode_data:latest
      container_name: encode_data
  
  split_data:
      build:
        context: ./src/data_service/split_data
        dockerfile: ./split_data_dockerfile
      depends_on:
        encode_data:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: split_data:latest
      container_name: split_data

  scale_data:
      build:
        context: ./src/data_service/scale_data
        dockerfile: ./scale_data_dockerfile
      depends_on:
        split_data:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
      image: scale_data:latest
      container_name: scale_data

  training:
      build:
        context: ./src/modeling_service/training
        dockerfile: ./training_dockerfile
      depends_on:
        scale_data:
          condition: service_completed_successfully
      volumes:
        - ./src:/src
        - type: bind
          source: ./src
          target: /app/src
        - ./data:/data
        - type: bind
          source: ./data
          target: /app/data
        - ./models:/models
        - type: bind
          source: ./models
          target: /app/models
      image: training:latest
      container_name: training
    
  evaluate:
    build:
      context: ./src/modeling_service/evaluate
      dockerfile: ./evaluate_dockerfile
    depends_on:
      training:
        condition: service_completed_successfully
    volumes:
      - ./src:/src
      - type: bind
        source: ./src
        target: /app/src
      - ./data:/data
      - type: bind
        source: ./data
        target: /app/data
      - ./models:/models
      - type: bind
        source: ./models
        target: /app/models
      - ./metrics:/metrics
      - type: bind
        source: ./metrics
        target: /app/metrics
    image: evaluate:latest
    container_name: evaluate
    



